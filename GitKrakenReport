GitKraken is a free program that allows easy visual and functional access in using Git programs and sites, such as GitHub and BitBucket. It keeps track of all added and edited files to a repository, and makes it simple to separate and search branches and previous iterations. It also makes it easy to see the collaborative efforts of others who are working on the same repository, though it keeps them organized so you can see what you did separately from what others have done.

There are certain rules that must be followed for GitKraken to work properly - but most of these rules are the same as the ones used by Git hosting sites like GitHub. Repository names cannot have spaces, only dashes or keeping the words together and organized with camel casing. The procedure is similar as well. First, you must initialize a new repository or clone an existing one to make as the current folder. Then, files created and changed in that folder are displayed and recent changes are fetched every few seconds. Obviously, an internet connection is required for these to be applied to the cloud, however, GitKraken also keeps these files locally for everything that you create or edit on your current computer. New additions to the repository must be staged and committed, and then they are pushed into the cloud connected with the version control source.

In our class, we are using Git to keep track of our scripts, models, and other files for our animation projects. For groups, it will allow for collaborative effort as we all work on the same feature. This is also a great tool for the professors to track the work and schedule of each student, to make sure everyone is on task.

However, from the "webinar" on Youtube, I can already see a great deal of other uses for Git and GitKraken. First of all is the example provided in the video - using GitKraken to create and track and edit a script. I like to follow how movies get made, and I know full well that a film's script goes through vast changes over the course of shooting. Scenes must be deleted or altered. Lines must be shortened or changed to a different character. The story must be changed to be more effective or efficient for filming. GitKraken would allow for both screenwriters to alter the script as needed, and also the directors to make their own changes while on set and make it easy for everyone to see it without having to print off an entirely new page. Also, if the changes turned out not to be as great as hoped, it would be simple for them to go back and find an earlier version of the script to compare and make further revisions. This is a lot more efficient and convenient than keeping multiple iterations of scripts.

Another example might include how some authors can manage to write books collaboratively, such as recent books from Clive Cussler and his associates. Changes made and new chapters written could easily be shared between the two, even if they were on different sides of the world. And if certain elements added to the story weren't working out, they can simply go back and find an earlier version to make different changes. In fact, this would be of great use to a single author as well. Such features would also serve different kinds of businesses as well, as many have done so and purchased business versions of GitKraken for their companies.
